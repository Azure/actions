{
  "status": 200,
  "url": "https://api.github.com/repos/Azure/k8s-deploy/issues?state=open&per_page=100",
  "headers": {
    "access-control-allow-origin": "*",
    "access-control-expose-headers": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset",
    "cache-control": "private, max-age=60, s-maxage=60",
    "connection": "close",
    "content-encoding": "gzip",
    "content-security-policy": "default-src 'none'",
    "content-type": "application/json; charset=utf-8",
    "date": "Wed, 14 Apr 2021 06:57:09 GMT",
    "etag": "W/\"30af6d4bc4d04597ebe1ea88de2423b4ee8271441ad316a8de53968c02287b10\"",
    "referrer-policy": "origin-when-cross-origin, strict-origin-when-cross-origin",
    "server": "GitHub.com",
    "strict-transport-security": "max-age=31536000; includeSubdomains; preload",
    "transfer-encoding": "chunked",
    "vary": "Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding, Accept, X-Requested-With",
    "x-content-type-options": "nosniff",
    "x-frame-options": "deny",
    "x-github-media-type": "github.squirrel-girl-preview; format=json, github.inertia-preview; format=json, github.starfox-preview; format=json, github.mockingbird-preview; param=sailor-v-preview; format=json, github.squirrel-girl-preview; format=json, github.inertia-preview; format=json, github.starfox-preview; format=json, github.mockingbird-preview; param=sailor-v-preview; format=json",
    "x-github-request-id": "07E2:56C6:13D781D:22E2F6D:60769245",
    "x-ratelimit-limit": "15000",
    "x-ratelimit-remaining": "14967",
    "x-ratelimit-reset": "1618387023",
    "x-ratelimit-used": "33",
    "x-xss-protection": "0"
  },
  "data": [
    {
      "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/126",
      "repository_url": "https://api.github.com/repos/Azure/k8s-deploy",
      "labels_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/126/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/126/comments",
      "events_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/126/events",
      "html_url": "https://github.com/Azure/k8s-deploy/issues/126",
      "id": 837795752,
      "node_id": "MDU6SXNzdWU4Mzc3OTU3NTI=",
      "number": 126,
      "title": "Support different manifest delimiters",
      "user": {
        "login": "SamMousa",
        "id": 547021,
        "node_id": "MDQ6VXNlcjU0NzAyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/547021?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SamMousa",
        "html_url": "https://github.com/SamMousa",
        "followers_url": "https://api.github.com/users/SamMousa/followers",
        "following_url": "https://api.github.com/users/SamMousa/following{/other_user}",
        "gists_url": "https://api.github.com/users/SamMousa/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SamMousa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SamMousa/subscriptions",
        "organizations_url": "https://api.github.com/users/SamMousa/orgs",
        "repos_url": "https://api.github.com/users/SamMousa/repos",
        "events_url": "https://api.github.com/users/SamMousa/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SamMousa/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 2912923114,
          "node_id": "MDU6TGFiZWwyOTEyOTIzMTE0",
          "url": "https://api.github.com/repos/Azure/k8s-deploy/labels/default",
          "name": "default",
          "color": "896960",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "Ganeshrockz",
        "id": 17287148,
        "node_id": "MDQ6VXNlcjE3Mjg3MTQ4",
        "avatar_url": "https://avatars.githubusercontent.com/u/17287148?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Ganeshrockz",
        "html_url": "https://github.com/Ganeshrockz",
        "followers_url": "https://api.github.com/users/Ganeshrockz/followers",
        "following_url": "https://api.github.com/users/Ganeshrockz/following{/other_user}",
        "gists_url": "https://api.github.com/users/Ganeshrockz/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Ganeshrockz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Ganeshrockz/subscriptions",
        "organizations_url": "https://api.github.com/users/Ganeshrockz/orgs",
        "repos_url": "https://api.github.com/users/Ganeshrockz/repos",
        "events_url": "https://api.github.com/users/Ganeshrockz/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Ganeshrockz/received_events",
        "type": "User",
        "site_admin": true
      },
      "assignees": [
        {
          "login": "Ganeshrockz",
          "id": 17287148,
          "node_id": "MDQ6VXNlcjE3Mjg3MTQ4",
          "avatar_url": "https://avatars.githubusercontent.com/u/17287148?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Ganeshrockz",
          "html_url": "https://github.com/Ganeshrockz",
          "followers_url": "https://api.github.com/users/Ganeshrockz/followers",
          "following_url": "https://api.github.com/users/Ganeshrockz/following{/other_user}",
          "gists_url": "https://api.github.com/users/Ganeshrockz/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Ganeshrockz/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Ganeshrockz/subscriptions",
          "organizations_url": "https://api.github.com/users/Ganeshrockz/orgs",
          "repos_url": "https://api.github.com/users/Ganeshrockz/repos",
          "events_url": "https://api.github.com/users/Ganeshrockz/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Ganeshrockz/received_events",
          "type": "User",
          "site_admin": true
        },
        {
          "login": "ds-ms",
          "id": 25762922,
          "node_id": "MDQ6VXNlcjI1NzYyOTIy",
          "avatar_url": "https://avatars.githubusercontent.com/u/25762922?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ds-ms",
          "html_url": "https://github.com/ds-ms",
          "followers_url": "https://api.github.com/users/ds-ms/followers",
          "following_url": "https://api.github.com/users/ds-ms/following{/other_user}",
          "gists_url": "https://api.github.com/users/ds-ms/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ds-ms/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ds-ms/subscriptions",
          "organizations_url": "https://api.github.com/users/ds-ms/orgs",
          "repos_url": "https://api.github.com/users/ds-ms/repos",
          "events_url": "https://api.github.com/users/ds-ms/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ds-ms/received_events",
          "type": "User",
          "site_admin": true
        }
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-03-22T14:51:33Z",
      "updated_at": "2021-04-14T06:54:17Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "I'm working in an environment where I went to set the manifests dynamically.\r\nSpecifically I have an environment variable that contains the list of manifests, but passing this into the action does not work:\r\n\r\n```yaml\r\n      - name: Set manifests\r\n        run: |\r\n          echo 'MANIFESTS<<EOF' >> $GITHUB_ENV\r\n          find k8s/shared k8s/staging -type f >> $GITHUB_ENV\r\n          echo 'EOF' >> $GITHUB_ENV\r\n      - run: echo \"$MANIFESTS\"\r\n      - name: Authenticate to kubernetes\r\n        uses: azure/k8s-set-context@v1\r\n        with:\r\n          method: service-account\r\n          k8s-url: ${{ secrets.KUBERNETES_URL }}\r\n          k8s-secret: ${{ secrets.STAGING_K8S_SECRET }}\r\n      - uses: Azure/k8s-deploy@v1.4\r\n        with:\r\n          namespace: 'staging'\r\n          manifests: |\r\n            ${{ env.MANIFESTS }}\r\n          images: |\r\n            ghcr.io/herams-who/herams-backend/app:${{ github.sha }}\r\n          kubectl-version: 'latest'      \r\n```\r\n\r\nThere is no valid syntax that'll work here (afaik) because Github Actions will not properly put in multiline values here. \r\nThis could be easily solved if a different separator would be accepted. \r\n\r\n\r\nInterestingly, current code splits by `\\n`.\r\nhttps://github.com/Azure/k8s-deploy/blob/main/src/run.ts#L62\r\n\r\n```ts\r\n let manifests = manifestsInput.split('\\n');\r\n ```\r\n\r\nA clean solution would be to make the separator configurable as an input in the action. I can make a PR.\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/126/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/126/timeline",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/120",
      "repository_url": "https://api.github.com/repos/Azure/k8s-deploy",
      "labels_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/120/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/120/comments",
      "events_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/120/events",
      "html_url": "https://github.com/Azure/k8s-deploy/issues/120",
      "id": 827721228,
      "node_id": "MDU6SXNzdWU4Mjc3MjEyMjg=",
      "number": 120,
      "title": "Support running in an in-cluster self-hosted worker without separately setting context",
      "user": {
        "login": "japsu",
        "id": 109397,
        "node_id": "MDQ6VXNlcjEwOTM5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/109397?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/japsu",
        "html_url": "https://github.com/japsu",
        "followers_url": "https://api.github.com/users/japsu/followers",
        "following_url": "https://api.github.com/users/japsu/following{/other_user}",
        "gists_url": "https://api.github.com/users/japsu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/japsu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/japsu/subscriptions",
        "organizations_url": "https://api.github.com/users/japsu/orgs",
        "repos_url": "https://api.github.com/users/japsu/repos",
        "events_url": "https://api.github.com/users/japsu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/japsu/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 2912923114,
          "node_id": "MDU6TGFiZWwyOTEyOTIzMTE0",
          "url": "https://api.github.com/repos/Azure/k8s-deploy/labels/default",
          "name": "default",
          "color": "896960",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "azooinmyluggage",
        "id": 6857119,
        "node_id": "MDQ6VXNlcjY4NTcxMTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6857119?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/azooinmyluggage",
        "html_url": "https://github.com/azooinmyluggage",
        "followers_url": "https://api.github.com/users/azooinmyluggage/followers",
        "following_url": "https://api.github.com/users/azooinmyluggage/following{/other_user}",
        "gists_url": "https://api.github.com/users/azooinmyluggage/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/azooinmyluggage/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/azooinmyluggage/subscriptions",
        "organizations_url": "https://api.github.com/users/azooinmyluggage/orgs",
        "repos_url": "https://api.github.com/users/azooinmyluggage/repos",
        "events_url": "https://api.github.com/users/azooinmyluggage/events{/privacy}",
        "received_events_url": "https://api.github.com/users/azooinmyluggage/received_events",
        "type": "User",
        "site_admin": true
      },
      "assignees": [
        {
          "login": "azooinmyluggage",
          "id": 6857119,
          "node_id": "MDQ6VXNlcjY4NTcxMTk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6857119?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/azooinmyluggage",
          "html_url": "https://github.com/azooinmyluggage",
          "followers_url": "https://api.github.com/users/azooinmyluggage/followers",
          "following_url": "https://api.github.com/users/azooinmyluggage/following{/other_user}",
          "gists_url": "https://api.github.com/users/azooinmyluggage/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/azooinmyluggage/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/azooinmyluggage/subscriptions",
          "organizations_url": "https://api.github.com/users/azooinmyluggage/orgs",
          "repos_url": "https://api.github.com/users/azooinmyluggage/repos",
          "events_url": "https://api.github.com/users/azooinmyluggage/events{/privacy}",
          "received_events_url": "https://api.github.com/users/azooinmyluggage/received_events",
          "type": "User",
          "site_admin": true
        },
        {
          "login": "N-Usha",
          "id": 25389593,
          "node_id": "MDQ6VXNlcjI1Mzg5NTkz",
          "avatar_url": "https://avatars.githubusercontent.com/u/25389593?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/N-Usha",
          "html_url": "https://github.com/N-Usha",
          "followers_url": "https://api.github.com/users/N-Usha/followers",
          "following_url": "https://api.github.com/users/N-Usha/following{/other_user}",
          "gists_url": "https://api.github.com/users/N-Usha/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/N-Usha/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/N-Usha/subscriptions",
          "organizations_url": "https://api.github.com/users/N-Usha/orgs",
          "repos_url": "https://api.github.com/users/N-Usha/repos",
          "events_url": "https://api.github.com/users/N-Usha/events{/privacy}",
          "received_events_url": "https://api.github.com/users/N-Usha/received_events",
          "type": "User",
          "site_admin": true
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-03-10T13:14:29Z",
      "updated_at": "2021-04-14T06:54:27Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Using a solution like [summerwind/actions-runner-controller](https://github.com/summerwind/actions-runner-controller), it is possible to run a self-hosted worker in a Kubernetes cluster. This self-hosted worker can then use the Kubernetes service account the worker is running under to authenticate to the K8s API to eg. do deployment.\r\n\r\n`Azure/k8s-deploy` instead insists on a \"context\" set by `Azure/k8s-set-context`. It cannot use or refuses to use the Kubernetes native service account authentication (ie. token and connection info mounted at `/var/run/secrets/kubernetes.io/serviceaccount`).\r\n\r\nAs a rule of thumb, I think if `kubectl` is able to run, `Azure/k8s-deploy` should be able to run. If you feel this is out of scope for `k8s-deploy`, alternatively `k8s-set-context` should be augmented to support the native way.",
      "reactions": {
        "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/120/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/120/timeline",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/113",
      "repository_url": "https://api.github.com/repos/Azure/k8s-deploy",
      "labels_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/113/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/113/comments",
      "events_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/113/events",
      "html_url": "https://github.com/Azure/k8s-deploy/issues/113",
      "id": 794628732,
      "node_id": "MDU6SXNzdWU3OTQ2Mjg3MzI=",
      "number": 113,
      "title": "Option to ignore error from certificate auto signed",
      "user": {
        "login": "jbaojunior",
        "id": 13425945,
        "node_id": "MDQ6VXNlcjEzNDI1OTQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13425945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jbaojunior",
        "html_url": "https://github.com/jbaojunior",
        "followers_url": "https://api.github.com/users/jbaojunior/followers",
        "following_url": "https://api.github.com/users/jbaojunior/following{/other_user}",
        "gists_url": "https://api.github.com/users/jbaojunior/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jbaojunior/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jbaojunior/subscriptions",
        "organizations_url": "https://api.github.com/users/jbaojunior/orgs",
        "repos_url": "https://api.github.com/users/jbaojunior/repos",
        "events_url": "https://api.github.com/users/jbaojunior/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jbaojunior/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1536279772,
          "node_id": "MDU6TGFiZWwxNTM2Mjc5Nzcy",
          "url": "https://api.github.com/repos/Azure/k8s-deploy/labels/bug",
          "name": "bug",
          "color": "d73a4a",
          "default": true,
          "description": "Something isn't working"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "shigupt202",
        "id": 57620559,
        "node_id": "MDQ6VXNlcjU3NjIwNTU5",
        "avatar_url": "https://avatars.githubusercontent.com/u/57620559?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shigupt202",
        "html_url": "https://github.com/shigupt202",
        "followers_url": "https://api.github.com/users/shigupt202/followers",
        "following_url": "https://api.github.com/users/shigupt202/following{/other_user}",
        "gists_url": "https://api.github.com/users/shigupt202/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shigupt202/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shigupt202/subscriptions",
        "organizations_url": "https://api.github.com/users/shigupt202/orgs",
        "repos_url": "https://api.github.com/users/shigupt202/repos",
        "events_url": "https://api.github.com/users/shigupt202/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shigupt202/received_events",
        "type": "User",
        "site_admin": true
      },
      "assignees": [
        {
          "login": "shigupt202",
          "id": 57620559,
          "node_id": "MDQ6VXNlcjU3NjIwNTU5",
          "avatar_url": "https://avatars.githubusercontent.com/u/57620559?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shigupt202",
          "html_url": "https://github.com/shigupt202",
          "followers_url": "https://api.github.com/users/shigupt202/followers",
          "following_url": "https://api.github.com/users/shigupt202/following{/other_user}",
          "gists_url": "https://api.github.com/users/shigupt202/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shigupt202/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shigupt202/subscriptions",
          "organizations_url": "https://api.github.com/users/shigupt202/orgs",
          "repos_url": "https://api.github.com/users/shigupt202/repos",
          "events_url": "https://api.github.com/users/shigupt202/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shigupt202/received_events",
          "type": "User",
          "site_admin": true
        }
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-01-26T23:08:23Z",
      "updated_at": "2021-03-15T09:20:52Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "I am trying to use the optional args to pass  `--insecure-skip-tls-verify` but this is not working. Has some way to do this?\r\n```\r\n    - uses: Azure/k8s-deploy@v1.3\r\n      with:\r\n        manifests: |\r\n          /tmp/deployment.yaml\r\n        images: deploy-service:${{ env.ENVIRONMENT }}\r\n        args: '--insecure-skip-tls-verify=true'\r\n```",
      "reactions": {
        "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/113/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/113/timeline",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/112",
      "repository_url": "https://api.github.com/repos/Azure/k8s-deploy",
      "labels_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/112/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/112/comments",
      "events_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/112/events",
      "html_url": "https://github.com/Azure/k8s-deploy/issues/112",
      "id": 791642887,
      "node_id": "MDU6SXNzdWU3OTE2NDI4ODc=",
      "number": 112,
      "title": "Potential issue in Annotations",
      "user": {
        "login": "kmkumaran",
        "id": 11780076,
        "node_id": "MDQ6VXNlcjExNzgwMDc2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11780076?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kmkumaran",
        "html_url": "https://github.com/kmkumaran",
        "followers_url": "https://api.github.com/users/kmkumaran/followers",
        "following_url": "https://api.github.com/users/kmkumaran/following{/other_user}",
        "gists_url": "https://api.github.com/users/kmkumaran/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kmkumaran/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kmkumaran/subscriptions",
        "organizations_url": "https://api.github.com/users/kmkumaran/orgs",
        "repos_url": "https://api.github.com/users/kmkumaran/repos",
        "events_url": "https://api.github.com/users/kmkumaran/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kmkumaran/received_events",
        "type": "User",
        "site_admin": true
      },
      "labels": [
        {
          "id": 2912923114,
          "node_id": "MDU6TGFiZWwyOTEyOTIzMTE0",
          "url": "https://api.github.com/repos/Azure/k8s-deploy/labels/default",
          "name": "default",
          "color": "896960",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "ajinkya599",
        "id": 11447401,
        "node_id": "MDQ6VXNlcjExNDQ3NDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/11447401?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajinkya599",
        "html_url": "https://github.com/ajinkya599",
        "followers_url": "https://api.github.com/users/ajinkya599/followers",
        "following_url": "https://api.github.com/users/ajinkya599/following{/other_user}",
        "gists_url": "https://api.github.com/users/ajinkya599/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ajinkya599/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ajinkya599/subscriptions",
        "organizations_url": "https://api.github.com/users/ajinkya599/orgs",
        "repos_url": "https://api.github.com/users/ajinkya599/repos",
        "events_url": "https://api.github.com/users/ajinkya599/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ajinkya599/received_events",
        "type": "User",
        "site_admin": true
      },
      "assignees": [
        {
          "login": "ajinkya599",
          "id": 11447401,
          "node_id": "MDQ6VXNlcjExNDQ3NDAx",
          "avatar_url": "https://avatars.githubusercontent.com/u/11447401?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ajinkya599",
          "html_url": "https://github.com/ajinkya599",
          "followers_url": "https://api.github.com/users/ajinkya599/followers",
          "following_url": "https://api.github.com/users/ajinkya599/following{/other_user}",
          "gists_url": "https://api.github.com/users/ajinkya599/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ajinkya599/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ajinkya599/subscriptions",
          "organizations_url": "https://api.github.com/users/ajinkya599/orgs",
          "repos_url": "https://api.github.com/users/ajinkya599/repos",
          "events_url": "https://api.github.com/users/ajinkya599/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ajinkya599/received_events",
          "type": "User",
          "site_admin": true
        },
        {
          "login": "ds-ms",
          "id": 25762922,
          "node_id": "MDQ6VXNlcjI1NzYyOTIy",
          "avatar_url": "https://avatars.githubusercontent.com/u/25762922?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ds-ms",
          "html_url": "https://github.com/ds-ms",
          "followers_url": "https://api.github.com/users/ds-ms/followers",
          "following_url": "https://api.github.com/users/ds-ms/following{/other_user}",
          "gists_url": "https://api.github.com/users/ds-ms/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ds-ms/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ds-ms/subscriptions",
          "organizations_url": "https://api.github.com/users/ds-ms/orgs",
          "repos_url": "https://api.github.com/users/ds-ms/repos",
          "events_url": "https://api.github.com/users/ds-ms/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ds-ms/received_events",
          "type": "User",
          "site_admin": true
        },
        {
          "login": "ammohant",
          "id": 59687782,
          "node_id": "MDQ6VXNlcjU5Njg3Nzgy",
          "avatar_url": "https://avatars.githubusercontent.com/u/59687782?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ammohant",
          "html_url": "https://github.com/ammohant",
          "followers_url": "https://api.github.com/users/ammohant/followers",
          "following_url": "https://api.github.com/users/ammohant/following{/other_user}",
          "gists_url": "https://api.github.com/users/ammohant/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ammohant/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ammohant/subscriptions",
          "organizations_url": "https://api.github.com/users/ammohant/orgs",
          "repos_url": "https://api.github.com/users/ammohant/repos",
          "events_url": "https://api.github.com/users/ammohant/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ammohant/received_events",
          "type": "User",
          "site_admin": true
        }
      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2021-01-22T02:22:32Z",
      "updated_at": "2021-04-14T06:54:37Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "The k8s-deploy would annotate details required for traceability. This is a two step process\r\n\r\n1. Deployment to resource\r\n2. Annotate to resource - Which overwrites any existing annotations on the resource.\r\n\r\nSince the steps are not transaction, parallel deployments to same resource can lead race conditions, with second annotation winning which need not be the same that is deployed.",
      "reactions": {
        "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/112/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/112/timeline",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/111",
      "repository_url": "https://api.github.com/repos/Azure/k8s-deploy",
      "labels_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/111/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/111/comments",
      "events_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/111/events",
      "html_url": "https://github.com/Azure/k8s-deploy/issues/111",
      "id": 788442344,
      "node_id": "MDU6SXNzdWU3ODg0NDIzNDQ=",
      "number": 111,
      "title": "Actions - Traceability Schema",
      "user": {
        "login": "rachitb777",
        "id": 9680572,
        "node_id": "MDQ6VXNlcjk2ODA1NzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9680572?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rachitb777",
        "html_url": "https://github.com/rachitb777",
        "followers_url": "https://api.github.com/users/rachitb777/followers",
        "following_url": "https://api.github.com/users/rachitb777/following{/other_user}",
        "gists_url": "https://api.github.com/users/rachitb777/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rachitb777/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rachitb777/subscriptions",
        "organizations_url": "https://api.github.com/users/rachitb777/orgs",
        "repos_url": "https://api.github.com/users/rachitb777/repos",
        "events_url": "https://api.github.com/users/rachitb777/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rachitb777/received_events",
        "type": "User",
        "site_admin": true
      },
      "labels": [
        {
          "id": 1536279775,
          "node_id": "MDU6TGFiZWwxNTM2Mjc5Nzc1",
          "url": "https://api.github.com/repos/Azure/k8s-deploy/labels/enhancement",
          "name": "enhancement",
          "color": "a2eeef",
          "default": true,
          "description": "New feature or request"
        },
        {
          "id": 2672322395,
          "node_id": "MDU6TGFiZWwyNjcyMzIyMzk1",
          "url": "https://api.github.com/repos/Azure/k8s-deploy/labels/proposal",
          "name": "proposal",
          "color": "C07695",
          "default": false,
          "description": ""
        },
        {
          "id": 2672322002,
          "node_id": "MDU6TGFiZWwyNjcyMzIyMDAy",
          "url": "https://api.github.com/repos/Azure/k8s-deploy/labels/traceability",
          "name": "traceability",
          "color": "144E70",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 8,
      "created_at": "2021-01-18T17:31:57Z",
      "updated_at": "2021-03-19T03:18:00Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "                                                      Traceability Schema\r\n\r\nAbstract\r\nTraceability  involves ability to track the source for issue, code, commit, artifact, workflow, and the user from the package deployed on the resource, through documented records.  This document proposes the traceability schema which captures the traceability data for any deployment which can be used by any \"CI/CD\" providers and cloud providers to organize the traceability data and  consume it in various forms. \r\n\r\nFormat:\r\n  The schema organizes the information in the following way \r\n\r\n- Categorization of various sections :\r\n\r\n     - How did it get deployed ?\r\n        Captures the commit and workflow details was the trigger and resulted in the deployment of a generated\r\n        artifact to a resource\r\n\r\n    - What was deployed ?\r\n       Captures the artifacts’ details that has been deployed\r\n\r\n   - Where did it get deployed ?\r\n      Captures the target resource where the deployment has happened.\r\n\r\n       The “How” and “Where” part can come from various providers which the schema factors in by having a provision to have\r\n        any new source “type/provider” to use the schema to generate the traceability data or a cloud provider to deploy the \r\n        data onto its respective cloud. This definition of the schema makes it agnostic to both cloud providers\r\n        (Azure, AWS, GCP ,Kusto) as well as  source control providers (GitHub, ADO, Bitbucket). \r\n\r\n- Representation of a specific section:\r\n    Data is organized into the following in each of the section/categorizes within the traceability data -\r\n    - \"Category of data\"\r\n        - \"Provider of the data\"\r\n            -  Associated properties specific to the provider\r\n                - The data is organized into multiple subsections/objects as appropriate. \r\n                - The data is organized into objects factoring in the hierarchy. Will restrict to a depth \r\n                  of two. Building the tree is outside the scope and goal of this schema.\r\n                - The data  in the property bag does not follow the paradigm of include all rather follows the \r\n                   paradigm of include relevant/important  data which will help consumer to trace deployment\r\n                   of an artifact on a resource and the trace the change in resource that resulted due to the act \r\n                   of deployment\r\n                -  We will continuously review the deployment traceability needs on various resources and \r\n                    artifacts across cloud types, involve the community for feedback and review the property\r\n                    bag schema accordingly.\r\n\r\n```\r\n{\r\n   \"id\": \" \" /* The unique identifier of the traceability object. The intent is for this to be unique, \r\n                     filtering on this is not an ask as yet */\r\n\r\n   \"timestamp\" : \" \" /* The timestamp of the creation of traceability object */  \r\n\r\n   \"schema-version\": \" \" /* Schema version of the traceability object */\r\n\r\n   \"data\":{  /* This section captures all the traceability data split into three subsections of devops, artifacts \r\n                     and target resource */\r\n\r\n       \"devops\": {  /* This section captures the information related to the code hosting or CI/CD platform. */\r\n\r\n           \"type\": \" \" /* This is the provider/type of the CI/CD or code hosting platform. GitHub, ADO, BB Pipelines etc. \r\n                              can be the possible types along with many others. */\r\n\r\n           \"properties\" :{ \r\n                /*  The contents of this property bag would depend on the constructs and entities pertaining\r\n                    to the type of CI/CD provider specified in the above field.  This will broadly encompass \r\n                    information on commits, pipelines, workflow runs, Issues etc. \r\n               */ \r\n           }\r\n       },\r\n\r\n       \"artifact\": { /* This section captures the information of the associated artifacts */\r\n\r\n           \"type\" : \" \" /* This is the type of artifact. It can be a build artifact or an Image artifact. \r\n                                 For ex. Docker file, Manifest, container Image, JAR etc.*/\r\n\r\n           \"properties\":{\r\n                        /* This property bag captures detailed information of the source and other properties \r\n                            of the associated artifact.\r\n                            A broad classification of the usage of artifact type will be as follows - \r\n                                       For target resource as the Image registery the artifact section would contain the \r\n                                       build artifacts that were used to produce the Image.\r\n                                       For target resource as the AKS/WebApp/DB the artifact section would contain the \r\n                                       Information on the source of the Image and other data associate to Image that is\r\n                                       deployed on the resource. \r\n                           For example, \r\n                           Docker file - This property bag would contain associated information like repository, path, \r\n                                         commit associated with the same \r\n                           Image       - This property bag would contain associated information like repository, registry, \r\n                                          Image SHA etc. associated with the Image.\r\n                      */\r\n           },\r\n       },\r\n       \"target resource\":{ \r\n                         /* This is target resource to which the deployment has happened. It would typically be the \r\n                            cloud provider like ACR, Azure, AWS and GCP.  The definition is the prerogative of the cloud\r\n                            provider who is consuming this traceability object */\r\n\r\n           \"type\": \" \", /* This will be the cloud provider type like Azure,AWS, GCP etc. Can also extend to any other\r\n                                 traceability stores like Kusto, AI and others */\r\n\r\n             \"StartTimestamp\":\"\" /* Start time stamp of the deployment */\r\n\r\n             \"EndTimestamp\":\"\"  /* End time stamp of the deployment */\r\n\r\n               \"properties\":{\r\n                               /*  */\r\n                   },\r\n               },\r\n       \"strategy\" : {\r\n           \"type\":  \"./* This is the type of deployment strategy getting used for current deployment. Example can be canary, blue-green etc\". \r\n           \"properties\": {\r\n                     /* Specific details of the deployment strategy. This is a set of key value pair\"\r\n               }\r\n           }\r\n       }  \r\n   } \r\n\r\nExamples: AWS\r\n\r\n   \"id\": \"cdfed638-6530-40cb-8d26-ce503cddb207\", \r\n   \"timestamp\" : \"2020-06-04T07:59:40Z\",\r\n   \"schema-version\": \"alpha-1\", \r\n   \"data\":{\r\n       \"devops\": {\r\n           \"type\": \"GitHubActions\", \r\n           \"properties\":{\r\n               \"run\":{ \r\n                   \"workflow\":{\r\n                       \"repository\": \"contoso/contoso-app\",\r\n                       \"path\": \"./github/workflow/cd.yml\",\r\n                       \"name\": \"Contoso Deployment\",\r\n                       \"ref\": \"refs/heads/release\",\r\n                       \"commit\": \"commitSHA\"\r\n                   },\r\n                   \"trigger\":{\r\n                       \"type\": \"on push\"\r\n                       \"properties\": {  \r\n                           \"user\": \"user\", \r\n                           \"timestamp\": \"timestamp\", \r\n                           \"commit\": \"commitSHA\"\r\n                       },\r\n                   },\r\n                   \"id\": 123,\r\n               }\r\n           }\r\n       },\r\n       \"artifact\": {\r\n           \"type\" : \"containerImage\", \r\n           \"properties\":{\r\n               \"image\":{ \r\n                   \"imageSHA\":\"SHA1\",\r\n                   \"registryProvider\":\"ECR\",\r\n                   \"image-repository\": \"account-service\",\r\n                   \"container-registry\": \"myRegistry\" \r\n               },\r\n           },\r\n       },\r\n    \"resource\": { \r\n        \"type\": \"AWS\",\r\n        \"properties\": {\r\n            \"resourcetype\": \"AWS::EC2::Instance\",\r\n            \"Resources\": {\r\n                \"Ec2Instance\": {\r\n                    \"Type\": \"AWS::EC2::Instance\",\r\n                    \"Properties\": {\r\n                        \"SecurityGroups\": [\r\n                            {\r\n                                \"Ref\": \"InstanceSecurityGroup\"\r\n                            },\r\n                            \"MyExistingSecurityGroup\"\r\n                        ],\r\n                        \"AvailabilityZone\": \"us-east-1a\",\r\n                        \"KeyName\": \"mykey\",\r\n                        \"ImageId\": \"ami-7a11e213\"\r\n                    }\r\n                },\r\n                \"InstanceSecurityGroup\": {\r\n                    \"Type\": \"AWS::EC2::SecurityGroup\",\r\n                    \"Properties\": {\r\n                        \"GroupDescription\": \"Enable SSH access via port 22\",\r\n                        \"SecurityGroupIngress\": [\r\n                            {\r\n                                \"IpProtocol\": \"tcp\",\r\n                                \"FromPort\": \"22\",\r\n                                \"ToPort\": \"22\",\r\n                                \"CidrIp\": \"0.0.0.0/0\"\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"updatestartTimestamp\": \"\",\r\n        \"updateendTimestamp\": \"\"\r\n    }  \r\n\r\n   } \r\n}\r\n\r\n\r\n\r\n\r\n\r\nExample2:  DockerFile to ACR\r\n{\r\n   \"id\": \"cdfed638-6530-40cb-8d26-ce503cddb207\", // ID for tracebility mapping object \r\n   \"timestamp\" : \"2020-06-04T07:59:40Z\", // timestamp when traceability mapping object was created \r\n   \"schema-version\": \"alpha-1\", // Schema version for traceability mapping object to accomodate breaking changes\r\n   \"data\":{\r\n       \"devops\": {\r\n           \"type\": \"GitHubActions\", // Others being ADO, BB pipelines, we have prioritized GH Actions. for other CI/CD provider property bag will be updated accordingly\r\n           \"properties\":{\r\n               \"run\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns.  \r\n                   \"workflow\":{\r\n                       \"repository\": \"contoso/contoso-app\",\r\n                       \"path\": \"./github/workflow/cd.yml\",\r\n                       \"name\": \"Contoso Deployment\",\r\n                       \"ref\": \"refs/heads/release\",\r\n                       \"commit\": \"commitSHA\"\r\n                   },\r\n                   \"trigger\":{\r\n                       \"type\": \"on push\",// ( others can be issueResolved, onCommit ... and property bag will be updated accordingly )\r\n                       \"properties\": { // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                           \"user\": \"user\", // triggered By\r\n                           \"timestamp\": \"timestamp\", // triggered at \r\n                           \"commit\": \"commitSHA\" // trigerring commit\r\n                       },\r\n                   },\r\n                   \"id\": 123,\r\n               }\r\n           }\r\n       },\r\n       \"artifact\": {\r\n           \"type\" : \"dockerfile\", // ( others can be  containerImage, JAR, k8sartifact .... and property bag will be updated accordingly )\r\n           \"properties\":{\r\n               \"file\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                   \"repository\": \"contoso1/contoso-app\",\r\n                   \"path\": \"/application\",\r\n                   \"name\": \"DockerFile\",\r\n                   \"ref\": \"refs/heads/release\",\r\n                   \"commit\": \"commitSHA\"\r\n               },\r\n           },\r\n       },\r\n       \"resource\":{// will be contributed by cloud providers\r\n           \"type\": \"Azure\", //( others can be AWS, GCP, Digital Ocean .. and property bag will be updated accordingly)\r\n               \"properties\":{\r\n                   \"id\": \"/subscriptions/c00d16c7-6c1f-4c03-9be1-6934a4c49682/resourceGroups/k8sRg/providers/Microsoft.ACR/4a4c49adaada\",\r\n                   \"resourcetype\": \"Microsoft.ACR\",\r\n                   \"properties\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                       \"imageSHA\":\"SHA1\",\r\n                       \"historicalImageSHAs\": \"\",\r\n                       \"registryProvider\":\"ACR\",\r\n                       \"image-repository\": \"account-service\",\r\n                       \"container-registry\": \"myRegistry\" \r\n                   },\r\n                   \"updatestartTimestamp\":\"\",\r\n                   \"updateendTimestamp\":\"\"\r\n               }\r\n       }  \r\n   } \r\n}\r\n\r\n\r\n\r\nExample3:  ACR to AKS\r\n{\r\n   \"id\": \"cdfed638-6530-40cb-8d26-ce503cddb207\", // ID for tracebility mapping object \r\n   \"timestamp\" : \"2020-06-04T07:59:40Z\", // timestamp when traceability mapping object was created \r\n   \"schema-version\": \"alpha-1\", // Schema version for traceability mapping object to accomodate breaking changes\r\n   \"data\":{\r\n       \"devops\": {\r\n           \"type\": \"GitHubActions\", // Others being ADO, BB pipelines, we have prioritized GH Actions. for other CI/CD provider property bag will be updated accordingly\r\n           \"properties\":{\r\n               \"run\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns.  \r\n                   \"workflow\":{\r\n                       \"repository\": \"contoso/contoso-app\",\r\n                       \"path\": \"./github/workflow/cd.yml\",\r\n                       \"name\": \"Contoso Deployment\",\r\n                       \"ref\": \"refs/heads/release\",\r\n                       \"commit\": \"commitSHA\"\r\n                   },\r\n                   \"trigger\":{\r\n                       \"type\": \"on push\",// ( others can be issueResolved, onCommit ... and property bag will be updated accordingly )\r\n                       \"properties\": { // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                           \"user\": \"user\", // triggered By\r\n                           \"timestamp\": \"timestamp\", // triggered at \r\n                           \"commit\": \"commitSHA\" // trigerring commit\r\n                       },\r\n                   },\r\n                   \"id\": 123,\r\n               }\r\n           }\r\n       },\r\n       \"artifact\": {\r\n           \"type\" : \"containerImage\", // ( others can be  JAR, k8sartifact .... and property bag will be updated accordingly )\r\n           \"properties\":{\r\n               \"image\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                   \"imageSHA\":\"SHA1\",\r\n                   \"registryProvider\":\"ACR\",\r\n                   \"image-repository\": \"account-service\",\r\n                   \"container-registry\": \"myRegistry\" \r\n               },\r\n           },\r\n       },\r\n       \"resource\":{// will be contributed by cloud providers\r\n           \"type\": \"Azure\", //( others can be AWS, GCP, Digital Ocean .. and property bag will be updated accordingly)\r\n               \"properties\":{\r\n                   \"ID\": \"/subscriptions/c00d16c7-6c1f-4c03-9be1-6934a4c49682/resourceGroups/k8sRg/providers/Microsoft.ContainerService/managedClusters/contoso-k8s-cluster\",\r\n                   \"resourcetype\": \"Microsoft.ContainerService/ManagedClusters\",\r\n                   \"properties\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                       \"namespace\": \"prod-wcus\",\r\n                       \"kubernetesObjects\": [\r\n                           {\r\n                               \"kind\": \"services\",\r\n                               \"name\": \"contoso-service\",\r\n                               \"version\": \"v1\"\r\n                           },\r\n                           {\r\n                               \"kind\": \"deployments\",\r\n                               \"name\": \"contoso-deployment\",\r\n                               \"version\": \"v1\"\r\n                           }\r\n                       ]\r\n                   },\r\n                   \"updatestartTimestamp\":\"\",\r\n                   \"updateendTimestamp\":\"\"\r\n               }\r\n       },\r\n       \"strategy\": {\r\n           \"type\" : \"canary\" \r\n           \"properties\": {\r\n                \"percentage\": 25\r\n           }\r\n      }\r\n   } \r\n}\r\n\r\n\r\nExample4:  Node to Webapp \r\n{\r\n   \"id\": \"cdfed638-6530-40cb-8d26-ce503cddb207\", // ID for tracebility mapping object \r\n   \"timestamp\" : \"2020-06-04T07:59:40Z\", // timestamp when traceability mapping object was created \r\n   \"schema-version\": \"alpha-1\", // Schema version for traceability mapping object to accomodate breaking changes\r\n   \"data\":{\r\n       \"devops\": {\r\n           \"type\": \"GitHubActions\", // Others being ADO, BB pipelines, we have prioritized GH Actions. for other CI/CD provider property bag will be updated accordingly\r\n           \"properties\":{\r\n               \"run\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns.  \r\n                   \"workflow\":{\r\n                       \"repository\": \"contoso/contoso-app\",\r\n                       \"path\": \"./github/workflow/cd.yml\",\r\n                       \"name\": \"Contoso Deployment\",\r\n                       \"ref\": \"refs/heads/release\",\r\n                       \"commit\": \"commitSHA\"\r\n                   },\r\n                   \"trigger\":{\r\n                       \"type\": \"on push\",// ( others can be issueResolved, onCommit ... and property bag will be updated accordingly )\r\n                       \"properties\": { // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                           \"user\": \"user\", // triggered By\r\n                           \"timestamp\": \"timestamp\", // triggered at \r\n                           \"commit\": \"commitSHA\" // trigerring commit\r\n                       },\r\n                   },\r\n                   \"id\": 123,\r\n               }\r\n           }\r\n       },\r\n       \"artifact\": {\r\n           \"type\" : \"nodefile\", // ( others can be  containerImage, JAR, k8sartifact .... and property bag will be updated accordingly )\r\n           \"properties\":{\r\n               \"file\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                   \"repository\": \"contoso1/contoso-app\",\r\n                   \"path\": \"/application\",\r\n                   \"name\": \"package.json\",\r\n                   \"ref\": \"refs/heads/release\",\r\n                   \"commit\": \"commitSHA\"\r\n               },\r\n           },\r\n       },\r\n       \"resource\":{// will be contributed by cloud providers\r\n           \"type\": \"Azure\", //( others can be AWS, GCP, Digital Ocean .. and property bag will be updated accordingly)\r\n               \"properties\":{\r\n                   \"id\": \"/subscriptions/afc11291-9826-46be-b852-70349146ddf8/resourcegroups/contosoRG/providers/Microsoft.Web/sites/contosoApp/appServices\",\r\n                   \"resourcetype\": \"Microsoft.AppService\",\r\n                   \"properties\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                       \"slot-name\":\"staging\",\r\n                   },\r\n                   \"updatestartTimestamp\":\"\",\r\n                   \"updateendTimestamp\":\"\"\r\n               }\r\n       }  \r\n   } \r\n}\r\n\r\n\r\nExample5:  NPM to Webapp \r\n{\r\n   \"id\": \"cdfed638-6530-40cb-8d26-ce503cddb207\", // ID for tracebility mapping object \r\n   \"timestamp\" : \"2020-06-04T07:59:40Z\", // timestamp when traceability mapping object was created \r\n   \"schema-version\": \"alpha-1\", // Schema version for traceability mapping object to accomodate breaking changes\r\n   \"data\":{\r\n       \"devops\": {\r\n           \"type\": \"GitHubActions\", // Others being ADO, BB pipelines, we have prioritized GH Actions. for other CI/CD provider property bag will be updated accordingly\r\n           \"properties\":{\r\n               \"run\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns.  \r\n                   \"workflow\":{\r\n                       \"repository\": \"contoso/contoso-app\",\r\n                       \"path\": \"./github/workflow/cd.yml\",\r\n                       \"name\": \"Contoso Deployment\",\r\n                       \"ref\": \"refs/heads/release\",\r\n                       \"commit\": \"commitSHA\"\r\n                   },\r\n                   \"trigger\":{\r\n                       \"type\": \"on push\",// ( others can be issueResolved, onCommit ... and property bag will be updated accordingly )\r\n                       \"properties\": { // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                           \"user\": \"user\", // triggered By\r\n                           \"timestamp\": \"timestamp\", // triggered at \r\n                           \"commit\": \"commitSHA\" // trigerring commit\r\n                       },\r\n                   },\r\n                   \"id\": 123,\r\n               }\r\n           }\r\n       },\r\n       \"artifact\": {\r\n           \"type\" : \"npmpackage\", // ( others can be  containerImage, JAR, k8sartifact .... and property bag will be updated accordingly )\r\n           \"properties\":{\r\n               \"package\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n\r\n               },\r\n           },\r\n       },\r\n       \"resource\":{// will be contributed by cloud providers\r\n           \"type\": \"Azure\", //( others can be AWS, GCP, Digital Ocean .. and property bag will be updated accordingly)\r\n               \"properties\":{\r\n                   \"id\": \"/subscriptions/afc11291-9826-46be-b852-70349146ddf8/resourcegroups/contosoRG/providers/Microsoft.Web/sites/contosoApp/appServices\",\r\n                   \"resourcetype\": \"Microsoft.AppService\",\r\n                   \"properties\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                       \"slot-name\":\"staging\",\r\n                   },\r\n                   \"updatestartTimestamp\":\"\",\r\n                   \"updateendTimestamp\":\"\"\r\n               }\r\n       }  \r\n   } \r\n}\r\n\r\n\r\n\r\n\r\nExample6:  2 images to AKS : we will create/send 2 traceability objects. One for each image. \r\n{\r\n   \"id\": \"cdfed638-6530-40cb-8d26-ce503cddb207\", // ID for tracebility mapping object \r\n   \"timestamp\" : \"2020-06-04T07:59:40Z\", // timestamp when traceability mapping object was created \r\n   \"schema-version\": \"alpha-1\", // Schema version for traceability mapping object to accomodate breaking changes\r\n   \"data\":{\r\n       \"devops\": {\r\n           \"type\": \"GitHubActions\", // Others being ADO, BB pipelines, we have prioritized GH Actions. for other CI/CD provider property bag will be updated accordingly\r\n           \"properties\":{\r\n               \"run\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns.  \r\n                   \"workflow\":{\r\n                       \"repository\": \"contoso/contoso-app\",\r\n                       \"path\": \"./github/workflow/cd.yml\",\r\n                       \"name\": \"Contoso Deployment\",\r\n                       \"ref\": \"refs/heads/release\",\r\n                       \"commit\": \"commitSHA\"\r\n                   },\r\n                   \"trigger\":{\r\n                       \"type\": \"on push\",// ( others can be issueResolved, onCommit ... and property bag will be updated accordingly )\r\n                       \"properties\": { // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                           \"user\": \"user\", // triggered By\r\n                           \"timestamp\": \"timestamp\", // triggered at \r\n                           \"commit\": \"commitSHA\" // trigerring commit\r\n                       },\r\n                   },\r\n                   \"id\": 123,\r\n               }\r\n           }\r\n       },\r\n       \"artifact\": {\r\n           \"type\" : \"containerImage\", // ( others can be  JAR, k8sartifact .... and property bag will be updated accordingly )\r\n           \"properties\":{\r\n               \"image\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                   \"imageSHA\":\"SHA1\",\r\n                   \"registryProvider\":\"ACR\",\r\n                   \"image-repository\": \"account-service\",\r\n                   \"container-registry\": \"myRegistry\" \r\n               },\r\n           },\r\n       },\r\n       \"resource\":{// will be contributed by cloud providers\r\n           \"type\": \"Azure\", //( others can be AWS, GCP, Digital Ocean .. and property bag will be updated accordingly)\r\n               \"properties\":{\r\n                   \"ID\": \"/subscriptions/c00d16c7-6c1f-4c03-9be1-6934a4c49682/resourceGroups/k8sRg/providers/Microsoft.ContainerService/managedClusters/contoso-k8s-cluster\",\r\n                   \"resourcetype\": \"Microsoft.ContainerService/ManagedClusters\",\r\n                   \"properties\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                       \"namespace\": \"prod-wcus\",\r\n                       \"kubernetesObjects\": [\r\n                           {\r\n                               \"kind\": \"services\",\r\n                               \"name\": \"contoso-service\",\r\n                               \"version\": \"v1\"\r\n                           },\r\n                           {\r\n                               \"kind\": \"deployments\",\r\n                               \"name\": \"contoso-deployment\",\r\n                               \"version\": \"v1\"\r\n                           }\r\n                       ]\r\n                   },\r\n                   \"updatestartTimestamp\":\"\",\r\n                   \"updateendTimestamp\":\"\"\r\n               }\r\n       }  \r\n   } \r\n}\r\n{\r\n   \"id\": \"cdfed638-6530-40cb-8d26-ce503cddb207\", // ID for tracebility mapping object \r\n   \"timestamp\" : \"2020-06-04T07:59:40Z\", // timestamp when traceability mapping object was created \r\n   \"schema-version\": \"alpha-1\", // Schema version for traceability mapping object to accomodate breaking changes\r\n   \"data\":{\r\n       \"devops\": {\r\n           \"type\": \"GitHubActions\", // Others being ADO, BB pipelines, we have prioritized GH Actions. for other CI/CD provider property bag will be updated accordingly\r\n           \"properties\":{\r\n               \"run\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns.  \r\n                   \"workflow\":{\r\n                       \"repository\": \"contoso/contoso-app\",\r\n                       \"path\": \"./github/workflow/cd.yml\",\r\n                       \"name\": \"Contoso Deployment\",\r\n                       \"ref\": \"refs/heads/release\",\r\n                       \"commit\": \"commitSHA\"\r\n                   },\r\n                   \"trigger\":{\r\n                       \"type\": \"on push\",// ( others can be issueResolved, onCommit ... and property bag will be updated accordingly )\r\n                       \"properties\": { // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                           \"user\": \"user\", // triggered By\r\n                           \"timestamp\": \"timestamp\", // triggered at \r\n                           \"commit\": \"commitSHA\" // trigerring commit\r\n                       },\r\n                   },\r\n                   \"id\": 123,\r\n               }\r\n           }\r\n       },\r\n       \"artifact\": {\r\n           \"type\" : \"containerImage\", // ( others can be  JAR, k8sartifact .... and property bag will be updated accordingly )\r\n           \"properties\":{\r\n               \"image\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                   \"imageSHA\":\"SHA2\",\r\n                   \"registryProvider\":\"ACR1\",\r\n                   \"image-repository\": \"hello-service\",\r\n                   \"container-registry\": \"yourRegistry\" \r\n               },\r\n           },\r\n       },\r\n       \"resource\":{// will be contributed by cloud providers\r\n           \"type\": \"Azure\", //( others can be AWS, GCP, Digital Ocean .. and property bag will be updated accordingly)\r\n               \"properties\":{\r\n                   \"ID\": \"/subscriptions/c00d16c7-6c1f-4c03-9be1-6934a4c49682/resourceGroups/k8sRg/providers/Microsoft.ContainerService/managedClusters/contoso-k8s-cluster\",\r\n                   \"resourcetype\": \"Microsoft.ContainerService/ManagedClusters\",\r\n                   \"properties\":{ // These are key fields which we have identified based on our understandng of traceability needs. Will expand them as more scenarios uneartherns. \r\n                       \"namespace\": \"prod-wcus\",\r\n                       \"kubernetesObjects\": [\r\n                           {\r\n                               \"kind\": \"services\",\r\n                               \"name\": \"contoso-service\",\r\n                               \"version\": \"v1\"\r\n                           },\r\n                           {\r\n                               \"kind\": \"deployments\",\r\n                               \"name\": \"contoso-deployment\",\r\n                               \"version\": \"v1\"\r\n                           }\r\n                       ]\r\n                   },\r\n                   \"updatestartTimestamp\":\"\",\r\n                   \"updateendTimestamp\":\"\"\r\n               }\r\n       }  \r\n   } \r\n}\r\n\r\n/* Open Items that is being worked on\r\n   Deployment Strategy - Factor it in the Schema , as part of the Resource as a reflection and as a deployment base object as configuration is one way.\r\n   Workflow Status -  Workflow may have a cascade of actions and at any point the status may not have relevance. It is more a command executed as part of actions itself\r\n*/\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/111/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/111/timeline",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/72",
      "repository_url": "https://api.github.com/repos/Azure/k8s-deploy",
      "labels_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/72/labels{/name}",
      "comments_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/72/comments",
      "events_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/72/events",
      "html_url": "https://github.com/Azure/k8s-deploy/issues/72",
      "id": 732715856,
      "node_id": "MDU6SXNzdWU3MzI3MTU4NTY=",
      "number": 72,
      "title": "Possibility to inform environment variable to be replaced in the container",
      "user": {
        "login": "joseotavioq",
        "id": 1444234,
        "node_id": "MDQ6VXNlcjE0NDQyMzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1444234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joseotavioq",
        "html_url": "https://github.com/joseotavioq",
        "followers_url": "https://api.github.com/users/joseotavioq/followers",
        "following_url": "https://api.github.com/users/joseotavioq/following{/other_user}",
        "gists_url": "https://api.github.com/users/joseotavioq/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/joseotavioq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joseotavioq/subscriptions",
        "organizations_url": "https://api.github.com/users/joseotavioq/orgs",
        "repos_url": "https://api.github.com/users/joseotavioq/repos",
        "events_url": "https://api.github.com/users/joseotavioq/events{/privacy}",
        "received_events_url": "https://api.github.com/users/joseotavioq/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1536279775,
          "node_id": "MDU6TGFiZWwxNTM2Mjc5Nzc1",
          "url": "https://api.github.com/repos/Azure/k8s-deploy/labels/enhancement",
          "name": "enhancement",
          "color": "a2eeef",
          "default": true,
          "description": "New feature or request"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "anraghun",
        "id": 46741940,
        "node_id": "MDQ6VXNlcjQ2NzQxOTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/46741940?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/anraghun",
        "html_url": "https://github.com/anraghun",
        "followers_url": "https://api.github.com/users/anraghun/followers",
        "following_url": "https://api.github.com/users/anraghun/following{/other_user}",
        "gists_url": "https://api.github.com/users/anraghun/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/anraghun/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/anraghun/subscriptions",
        "organizations_url": "https://api.github.com/users/anraghun/orgs",
        "repos_url": "https://api.github.com/users/anraghun/repos",
        "events_url": "https://api.github.com/users/anraghun/events{/privacy}",
        "received_events_url": "https://api.github.com/users/anraghun/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "anraghun",
          "id": 46741940,
          "node_id": "MDQ6VXNlcjQ2NzQxOTQw",
          "avatar_url": "https://avatars.githubusercontent.com/u/46741940?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/anraghun",
          "html_url": "https://github.com/anraghun",
          "followers_url": "https://api.github.com/users/anraghun/followers",
          "following_url": "https://api.github.com/users/anraghun/following{/other_user}",
          "gists_url": "https://api.github.com/users/anraghun/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/anraghun/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/anraghun/subscriptions",
          "organizations_url": "https://api.github.com/users/anraghun/orgs",
          "repos_url": "https://api.github.com/users/anraghun/repos",
          "events_url": "https://api.github.com/users/anraghun/events{/privacy}",
          "received_events_url": "https://api.github.com/users/anraghun/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-10-29T22:51:36Z",
      "updated_at": "2020-11-25T17:22:24Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "As we already have the option to change the container name (images).\r\nIt would be nice if we have an option to change the environment variable values for containers.\r\n\r\n**Example of a YAML for Kubernetes**\r\n```\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: my-deploy\r\nspec:\r\n  selector:\r\n    matchLabels:\r\n      app: web\r\n  replicas: 2\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: web\r\n    spec:\r\n      containers:\r\n        - name: mycontainer\r\n          image: myregistry\\mycontainer:v1\r\n          ports:\r\n            - containerPort: 80\r\n          env:\r\n            - name: MY_CONTAINER_ENV\r\n              value: X\r\n```\r\n\r\n**Example of a Github Action:**\r\n```\r\n      - uses: Azure/k8s-deploy@v1\r\n        with:\r\n          manifests: |\r\n            kubernetes.yaml\r\n          env: |\r\n            MY_CONTAINER_ENV: \"${{ secrets.MY_CONTAINER_ENV }}\"\r\n```",
      "reactions": {
        "url": "https://api.github.com/repos/Azure/k8s-deploy/issues/72/reactions",
        "total_count": 2,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/Azure/k8s-deploy/issues/72/timeline",
      "performed_via_github_app": null
    }
  ]
}